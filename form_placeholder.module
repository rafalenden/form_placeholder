<?php

/**
 * @file
 * Use field label as placeholder for all elements in choosen form.
 */

/**
 * Implements hook_init().
 */
function form_placeholder_init() {
  $path = drupal_get_path('module', 'form_placeholder');

  drupal_add_library('form_placeholder', 'jquery.placeholder');

  drupal_add_js($path . '/js/form_placeholder.js');
  drupal_add_js(array(
    'form_placeholder' => array(
      'include' => str_replace(array("\r\n", "\r", "\n"), ',', variable_get('form_placeholder_include', '')),
      'exclude' => str_replace(array("\r\n", "\r", "\n"), ',', variable_get('form_placeholder_exclude', '')),
      'required' => variable_get('form_placeholder_required', 'append'),
    )), 'setting');
}

/**
 * Implements hook_menu().
 */
function form_placeholder_menu() {
  $items = array();
  $items['admin/config/user-interface/form-placeholder'] = array(
    'title' => 'Form placeholder',
    'description' => 'Use field label as placeholder for all elements in choosen form.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('form_placeholder_admin_settings'),
    'access arguments' => array('administer form placeholder'),
    'file' => 'form_placeholder.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function form_placeholder_permission() {
  return array(
    'administer form placeholder' => array(
      'title' => t('Administer form placeholder settings'),
    ),
  );
}

/**
 * Implements hook_library().
 */
function form_placeholder_library() {

  $path = drupal_get_path('module', 'form_placeholder');

  $libraries['jquery.placeholder'] = array(
    'title' => 'jQuery Placeholder',
    'website' => 'http://webcloud.se/code/jQuery-Placeholder/',
    'version' => '1.0',
    'js' => array(
      $path . '/lib/jquery.placeholder.min.js' => array(),
    ),
  );
  return $libraries;
}


/**
 * Implements hook_element_info_alter().
 */
function form_placeholder_element_info_alter(&$types) {
  foreach (array_keys($types) as $type) {
    switch ($type) {
      case 'form':
      case 'textarea':
      case 'textfield':
        $types[$type]['#process'][] = 'form_placeholder_process_element';
        break;
    }
  }
}

/**
 * Element process callback.
 *
 * @param array $element
 *   The render array element.
 *
 * @return
 *   The processed element.
 */
function form_placeholder_process_element($element) {
  if (isset($element['#form_placeholder'])) {
    $action = $element['#form_placeholder'] == TRUE ? 'include' : 'exclude';
    if ($element['#type'] == 'form') {
      $element['#attributes']['class'][] = 'form-placeholder-'.$action.'-children';
    }
    else {
      $element['#attributes']['class'][] = 'form-placeholder-'.$action;
    }
  }

  return $element;
}
